// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/fields.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Agrovision.Spray_Calculator.gRPC.Protos {
  public static partial class Field_GRPCService
  {
    static readonly string __ServiceName = "Fields_Proto.Field_GRPCService";

    static readonly grpc::Marshaller<global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto> __Marshaller_Fields_Proto_FieldDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Agrovision.Spray_Calculator.gRPC.Protos.FieldLookup> __Marshaller_Fields_Proto_FieldLookup = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Agrovision.Spray_Calculator.gRPC.Protos.FieldLookup.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Agrovision.Spray_Calculator.gRPC.Protos.ListFieldDto> __Marshaller_Fields_Proto_ListFieldDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Agrovision.Spray_Calculator.gRPC.Protos.ListFieldDto.Parser.ParseFrom);

    static readonly grpc::Method<global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto, global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto> __Method_CreateField = new grpc::Method<global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto, global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateField",
        __Marshaller_Fields_Proto_FieldDto,
        __Marshaller_Fields_Proto_FieldDto);

    static readonly grpc::Method<global::Agrovision.Spray_Calculator.gRPC.Protos.FieldLookup, global::Agrovision.Spray_Calculator.gRPC.Protos.ListFieldDto> __Method_GetActiveFields = new grpc::Method<global::Agrovision.Spray_Calculator.gRPC.Protos.FieldLookup, global::Agrovision.Spray_Calculator.gRPC.Protos.ListFieldDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetActiveFields",
        __Marshaller_Fields_Proto_FieldLookup,
        __Marshaller_Fields_Proto_ListFieldDto);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Agrovision.Spray_Calculator.gRPC.Protos.FieldsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Field_GRPCService</summary>
    [grpc::BindServiceMethod(typeof(Field_GRPCService), "BindService")]
    public abstract partial class Field_GRPCServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto> CreateField(global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Agrovision.Spray_Calculator.gRPC.Protos.ListFieldDto> GetActiveFields(global::Agrovision.Spray_Calculator.gRPC.Protos.FieldLookup request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(Field_GRPCServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateField, serviceImpl.CreateField)
          .AddMethod(__Method_GetActiveFields, serviceImpl.GetActiveFields).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, Field_GRPCServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateField, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto, global::Agrovision.Spray_Calculator.gRPC.Protos.FieldDto>(serviceImpl.CreateField));
      serviceBinder.AddMethod(__Method_GetActiveFields, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Agrovision.Spray_Calculator.gRPC.Protos.FieldLookup, global::Agrovision.Spray_Calculator.gRPC.Protos.ListFieldDto>(serviceImpl.GetActiveFields));
    }

  }
}
#endregion
