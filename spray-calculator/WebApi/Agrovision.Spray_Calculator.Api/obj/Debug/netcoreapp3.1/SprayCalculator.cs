// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: spray_calculator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Agrovision.Spray_Calculator.gRPC.Protos {

  /// <summary>Holder for reflection information generated from spray_calculator.proto</summary>
  public static partial class SprayCalculatorReflection {

    #region Descriptor
    /// <summary>File descriptor for spray_calculator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SprayCalculatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZzcHJheV9jYWxjdWxhdG9yLnByb3RvEhVTcHJheV9DYWxjdWxhdG9ycHJv",
            "dG8iTwoVQ2FsY3VsYXRlU3ByYXlSZXF1ZXN0EhAKCGFnZW50UmVxGAEgASgB",
            "EhEKCWZpZWxkU2l6ZRgCIAEoARIRCgl3YXRlclJhdGUYAyABKAEiQAoWQ2Fs",
            "Y3VsYXRlU3ByYXlSZXNwb25zZRISCgphZ2VudFZhbHVlGAEgASgBEhIKCndh",
            "dGVyVmFsdWUYAiABKAEyjAEKG1NwcmF5X0NhbGN1bGF0b3JHUlBDU2Vydmlj",
            "ZRJtCg5DYWxjdWxhdGVTcHJheRIsLlNwcmF5X0NhbGN1bGF0b3Jwcm90by5D",
            "YWxjdWxhdGVTcHJheVJlcXVlc3QaLS5TcHJheV9DYWxjdWxhdG9ycHJvdG8u",
            "Q2FsY3VsYXRlU3ByYXlSZXNwb25zZUIqqgInQWdyb3Zpc2lvbi5TcHJheV9D",
            "YWxjdWxhdG9yLmdSUEMuUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Agrovision.Spray_Calculator.gRPC.Protos.CalculateSprayRequest), global::Agrovision.Spray_Calculator.gRPC.Protos.CalculateSprayRequest.Parser, new[]{ "AgentReq", "FieldSize", "WaterRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Agrovision.Spray_Calculator.gRPC.Protos.CalculateSprayResponse), global::Agrovision.Spray_Calculator.gRPC.Protos.CalculateSprayResponse.Parser, new[]{ "AgentValue", "WaterValue" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CalculateSprayRequest : pb::IMessage<CalculateSprayRequest> {
    private static readonly pb::MessageParser<CalculateSprayRequest> _parser = new pb::MessageParser<CalculateSprayRequest>(() => new CalculateSprayRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CalculateSprayRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Agrovision.Spray_Calculator.gRPC.Protos.SprayCalculatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculateSprayRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculateSprayRequest(CalculateSprayRequest other) : this() {
      agentReq_ = other.agentReq_;
      fieldSize_ = other.fieldSize_;
      waterRate_ = other.waterRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculateSprayRequest Clone() {
      return new CalculateSprayRequest(this);
    }

    /// <summary>Field number for the "agentReq" field.</summary>
    public const int AgentReqFieldNumber = 1;
    private double agentReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AgentReq {
      get { return agentReq_; }
      set {
        agentReq_ = value;
      }
    }

    /// <summary>Field number for the "fieldSize" field.</summary>
    public const int FieldSizeFieldNumber = 2;
    private double fieldSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FieldSize {
      get { return fieldSize_; }
      set {
        fieldSize_ = value;
      }
    }

    /// <summary>Field number for the "waterRate" field.</summary>
    public const int WaterRateFieldNumber = 3;
    private double waterRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double WaterRate {
      get { return waterRate_; }
      set {
        waterRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CalculateSprayRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CalculateSprayRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AgentReq, other.AgentReq)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FieldSize, other.FieldSize)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WaterRate, other.WaterRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AgentReq != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AgentReq);
      if (FieldSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FieldSize);
      if (WaterRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WaterRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AgentReq != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(AgentReq);
      }
      if (FieldSize != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FieldSize);
      }
      if (WaterRate != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(WaterRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AgentReq != 0D) {
        size += 1 + 8;
      }
      if (FieldSize != 0D) {
        size += 1 + 8;
      }
      if (WaterRate != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CalculateSprayRequest other) {
      if (other == null) {
        return;
      }
      if (other.AgentReq != 0D) {
        AgentReq = other.AgentReq;
      }
      if (other.FieldSize != 0D) {
        FieldSize = other.FieldSize;
      }
      if (other.WaterRate != 0D) {
        WaterRate = other.WaterRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            AgentReq = input.ReadDouble();
            break;
          }
          case 17: {
            FieldSize = input.ReadDouble();
            break;
          }
          case 25: {
            WaterRate = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CalculateSprayResponse : pb::IMessage<CalculateSprayResponse> {
    private static readonly pb::MessageParser<CalculateSprayResponse> _parser = new pb::MessageParser<CalculateSprayResponse>(() => new CalculateSprayResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CalculateSprayResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Agrovision.Spray_Calculator.gRPC.Protos.SprayCalculatorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculateSprayResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculateSprayResponse(CalculateSprayResponse other) : this() {
      agentValue_ = other.agentValue_;
      waterValue_ = other.waterValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculateSprayResponse Clone() {
      return new CalculateSprayResponse(this);
    }

    /// <summary>Field number for the "agentValue" field.</summary>
    public const int AgentValueFieldNumber = 1;
    private double agentValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AgentValue {
      get { return agentValue_; }
      set {
        agentValue_ = value;
      }
    }

    /// <summary>Field number for the "waterValue" field.</summary>
    public const int WaterValueFieldNumber = 2;
    private double waterValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double WaterValue {
      get { return waterValue_; }
      set {
        waterValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CalculateSprayResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CalculateSprayResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AgentValue, other.AgentValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WaterValue, other.WaterValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AgentValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AgentValue);
      if (WaterValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WaterValue);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AgentValue != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(AgentValue);
      }
      if (WaterValue != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(WaterValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AgentValue != 0D) {
        size += 1 + 8;
      }
      if (WaterValue != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CalculateSprayResponse other) {
      if (other == null) {
        return;
      }
      if (other.AgentValue != 0D) {
        AgentValue = other.AgentValue;
      }
      if (other.WaterValue != 0D) {
        WaterValue = other.WaterValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            AgentValue = input.ReadDouble();
            break;
          }
          case 17: {
            WaterValue = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
